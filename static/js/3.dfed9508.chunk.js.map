{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","formStyle","formError","src","warning","alt","Field","name","component","placeholder","type","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditeMode","buttonEdit","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","description","blockAvatar","for","uploadPhoto","loadPhoto","id","target","files","length","photos","large","userPhoto","avatar","info","initialValues","formData","then","Post","item","small","message","text","likes","likesCount","MyPosts","React","memo","postsElements","posts","reverse","p","postsBlock","AddPostFormRedux","values","addPost","newPostBody","maxLength10","maxLengthCreator","textForm","textArea","Textarea","validate","required","buttonSend","MyPostsContainer","connect","state","profilePage","newPostText","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Loader","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.dfed9508.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__18oDG\",\"avatar\":\"ProfileInfo_avatar__3USjs\",\"blockAvatar\":\"ProfileInfo_blockAvatar__I8sDb\",\"contacts\":\"ProfileInfo_contacts__133cU\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__2vwLL\",\"loadPhoto\":\"ProfileInfo_loadPhoto__33cXx\",\"buttonEdit\":\"ProfileInfo_buttonEdit__1BJ1O\",\"status\":\"ProfileInfo_status__1GTgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kdEZ\",\"posts\":\"MyPosts_posts__I6ZnD\",\"textForm\":\"MyPosts_textForm__1BC6u\",\"buttonSend\":\"MyPosts_buttonSend__2HGTP\",\"textArea\":\"MyPosts_textArea__2ILq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__15edI\",\"message\":\"Post_message__6che2\",\"likes\":\"Post_likes__2ysip\"};","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div className={s.status}>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"Write your status...\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport formStyle from \"./../../common/FormsControls/FormsControls.module.css\";\r\nimport warning from \"./../../../img/warning.png\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button>Save</button>\r\n      {error && (\r\n        <div className={formStyle.formError}>\r\n          <img src={warning} alt=\"warning\" className={s.warning} />\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Fullname:</b>\r\n        <Field\r\n          name={\"fullName\"}\r\n          component={\"input\"}\r\n          placeholder={\"Write your name...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>{\" \"}\r\n        <Field name={\"lookingForAJob\"} component={\"input\"} type={\"checkbox\"} />\r\n      </div>\r\n      <div>\r\n        <b>My professional skills:</b>{\" \"}\r\n        <Field\r\n          name={\"lookingForAJobDescription\"}\r\n          component={\"textarea\"}\r\n          placeholder={\"Write your professional skills...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>About me:</b>{\" \"}\r\n        <Field\r\n          name={\"aboutMe\"}\r\n          component={\"input\"}\r\n          placeholder={\"Write some information...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div className={s.contacts} key={key}>\r\n              <b>{key}:</b>{\" \"}\r\n              <div>\r\n                <Field\r\n                  name={\"contacts.\" + key}\r\n                  component={\"input\"}\r\n                  placeholder={key}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../img/user.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <div className={s.blockAvatar}>\r\n          <div>\r\n            {isOwner && (\r\n              <>\r\n                <label for={s.uploadPhoto}>\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/png/512/12/12313.png\"\r\n                    alt=\"upload\"\r\n                    className={s.loadPhoto}\r\n                  />\r\n                </label>\r\n                <input\r\n                  id={s.uploadPhoto}\r\n                  type={\"file\"}\r\n                  onChange={onMainPhotoSelected}\r\n                />{\" \"}\r\n              </>\r\n            )}\r\n          </div>\r\n          <img\r\n            src={profile.photos.large || userPhoto}\r\n            alt=\"\"\r\n            className={s.avatar}\r\n          />\r\n        </div>\r\n        <div className={s.info}>\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              initialValues={profile}\r\n              profile={profile}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n              goToEditeMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n            />\r\n          )}\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditeMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <img\r\n          src=\"https://icons-for-free.com/iconfiles/png/512/compose+draw+edit+write+icon-1320196706045580276.png\"\r\n          className={s.buttonEdit}\r\n          onClick={goToEditeMode}\r\n        />\r\n      )}\r\n      <div>\r\n        <h3>{profile.fullName}</h3>\r\n        <b>Looking for a job: </b>\r\n        {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        {profile.lookingForAJob && (\r\n          <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>{\" \"}\r\n        <div className={s.contacts}>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <Contact\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={profile.contacts[key]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"./../../../../img/user.jpg\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src={props.profile.photos.small || userPhoto} />\r\n        <div className={s.message}>{props.text}</div>\r\n        <br />\r\n        <div className={s.likes}>\r\n          <span>{props.likesCount} ♥</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post\r\n        key={p.id}\r\n        text={p.text}\r\n        likesCount={p.likesCount}\r\n        profile={props.profile}\r\n      />\r\n    ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form className={s.textForm} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        className={s.textArea}\r\n        component={Textarea}\r\n        name=\"newPostBody\"\r\n        placeholder=\"Write post text...\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button className={s.buttonSend}>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer profile={props.profile} />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n  render() {\r\n    if (!this.props.profile) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}