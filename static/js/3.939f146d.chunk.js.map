{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","className","s","description","src","photos","large","userPhoto","alt","info","fullName","contacts","vk","type","target","files","length","Post","item","text","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","textForm","handleSubmit","Field","textArea","component","Textarea","name","placeholder","validate","required","buttonSend","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Loader","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.939f146d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__18oDG\",\"info\":\"ProfileInfo_info__1miKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kdEZ\",\"posts\":\"MyPosts_posts__I6ZnD\",\"textForm\":\"MyPosts_textForm__1BC6u\",\"buttonSend\":\"MyPosts_buttonSend__2HGTP\",\"textArea\":\"MyPosts_textArea__2ILq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__15edI\"};","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          Status:{\" \"}\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"Write your status...\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../img/user.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <img src={profile.photos.large || userPhoto} alt=\"\" />\r\n        <div className={s.info}>\r\n          <h3>{profile.fullName}</h3>\r\n          <div>\r\n            Date of Birth: 20th of April\r\n            <br /> Education: {profile.contacts.vk}\r\n            <ProfileStatusWithHooks\r\n              status={status}\r\n              updateStatus={updateStatus}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img\r\n          src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\"\r\n          alt=\"\"\r\n        />\r\n        {props.text}\r\n        <br />\r\n        <span>{props.likesCount} â™¥</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post text={p.text} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form className={s.textForm} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        className={s.textArea}\r\n        component={Textarea}\r\n        name=\"newPostBody\"\r\n        placeholder=\"Write post text...\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button className={s.buttonSend}>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n  render() {\r\n    if (!this.props.profile) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}