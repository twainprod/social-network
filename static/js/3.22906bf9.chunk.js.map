{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","formStyle","formError","src","warning","alt","s","Field","name","component","placeholder","type","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditeMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","description","photos","large","userPhoto","avatar","info","initialValues","formData","then","target","files","length","Post","item","text","likesCount","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","AddPostFormRedux","values","addPost","newPostBody","maxLength10","maxLengthCreator","textForm","textArea","Textarea","validate","required","buttonSend","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Loader","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.22906bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__18oDG\",\"avatar\":\"ProfileInfo_avatar__3USjs\",\"info\":\"ProfileInfo_info__1miKu\",\"contacts\":\"ProfileInfo_contacts__133cU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kdEZ\",\"posts\":\"MyPosts_posts__I6ZnD\",\"textForm\":\"MyPosts_textForm__1BC6u\",\"buttonSend\":\"MyPosts_buttonSend__2HGTP\",\"textArea\":\"MyPosts_textArea__2ILq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__15edI\"};","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"Write your status...\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport formStyle from \"./../../common/FormsControls/FormsControls.module.css\";\r\nimport warning from \"./../../../img/warning.png\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button>Save</button>\r\n      {error && (\r\n        <div className={formStyle.formError}>\r\n          <img src={warning} alt=\"warning\" className={s.warning} />\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Fullname:</b>\r\n        <Field\r\n          name={\"fullName\"}\r\n          component={\"input\"}\r\n          placeholder={\"Write your name...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>{\" \"}\r\n        <Field name={\"lookingForAJob\"} component={\"input\"} type={\"checkbox\"} />\r\n      </div>\r\n      <div>\r\n        <b>My professional skills:</b>{\" \"}\r\n        <Field\r\n          name={\"lookingForAJobDescription\"}\r\n          component={\"textarea\"}\r\n          placeholder={\"Write your professional skills...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>About me:</b>{\" \"}\r\n        <Field\r\n          name={\"aboutMe\"}\r\n          component={\"input\"}\r\n          placeholder={\"Write some information...\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div className={s.contacts} key={key}>\r\n              <b>{key}:</b>{\" \"}\r\n              <div>\r\n                <Field\r\n                  name={\"contacts.\" + key}\r\n                  component={\"input\"}\r\n                  placeholder={key}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../img/user.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <img\r\n          src={profile.photos.large || userPhoto}\r\n          alt=\"\"\r\n          className={s.avatar}\r\n        />\r\n        <div className={s.info}>\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              initialValues={profile}\r\n              profile={profile}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n              goToEditeMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n            />\r\n          )}\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditeMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <button onClick={goToEditeMode}>Edit</button>}\r\n      <div>\r\n        <h3>{profile.fullName}</h3>\r\n        <b>Looking for a job: </b>\r\n        {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        {profile.lookingForAJob && (\r\n          <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>{\" \"}\r\n        <div className={s.contacts}>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <Contact\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={profile.contacts[key]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img\r\n          src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\"\r\n          alt=\"\"\r\n        />\r\n        {props.text}\r\n        <br />\r\n        <span>{props.likesCount} ♥</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post key={p.id} text={p.text} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form className={s.textForm} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        className={s.textArea}\r\n        component={Textarea}\r\n        name=\"newPostBody\"\r\n        placeholder=\"Write post text...\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button className={s.buttonSend}>Add post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId)\r\n      this.refreshProfile();\r\n  }\r\n  render() {\r\n    if (!this.props.profile) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}